export module example;

varying vec3 g_pixel_color;

uniform vec3 g_bg_color_1 = vec3(1.0, 1.0, 1.0);

uniform vec3 g_bg_color_2 = vec3(0.5, 0.7, 1.0);

vec3 on_miss(vec3 ray_dir)
{
  float t = (ray_dir.y + 1.0) * 0.5;

  return (1.0 - t) * g_bg_color_1 + t * g_bg_color_2;
}

void sample_pixel(vec2 uv_min, vec2 uv_max)
{
  vec2 uv_center = (uv_min + uv_max) * 0.5;

  vec3 ray_dir = vec3(uv_center.x * 2.0 - 1.0, 1.0 - uv_center.y * 2.0, -1.0);

  g_pixel_color = on_miss(ray_dir);
}

vec4 encode_pixel() {
  return vec4(g_pixel_color.xyz, 1.0);
}
